[build-system]
requires = ["setuptools", "wheel"]

[tool.cibuildwheel]
skip = "pp3* *musllinux_aarch64 *musllinux_ppc64le"

archs = ["auto"]
build-frontend = "default"
dependency-versions = "pinned"
environment = { LIBGIT2_VERSION = "1.8.4", LIBSSH2_VERSION = "1.11.1", OPENSSL_VERSION = "3.2.3", LIBGIT2 = "/project/ci" }

before-all = "sh build.sh"

[tool.cibuildwheel.linux]
repair-wheel-command = "LD_LIBRARY_PATH=/project/ci/lib64 auditwheel repair -w {dest_dir} {wheel}"
archs = ["x86_64", "aarch64", "ppc64le"]

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
repair-wheel-command = "LD_LIBRARY_PATH=/project/ci/lib auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
archs = ["universal2"]
environment = { LIBGIT2_VERSION = "1.8.4", LIBSSH2_VERSION = "1.11.1", OPENSSL_VERSION = "3.2.3", LIBGIT2 = "/Users/runner/work/pygit2/pygit2/ci" }
repair-wheel-command = "DYLD_LIBRARY_PATH=/Users/runner/work/pygit2/pygit2/ci/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}"

[tool.ruff]
target-version = "py310" # oldest supported Python version
fix = true
extend-exclude = [".cache", ".coverage", "build", "venv*"]
lint.select = [
    "C",
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "ARG",
    "SIM",
    "PTH",
    "PL",
    "TID",
]
lint.ignore = [
    "W291",    # Trailing whitespace
    "E501",    # Line too long
    "W293",    # Blank line contains whitespace
    "PLR0912", # Too many branches
    "PLR2004", # Magic values
    "PLR0915", # Too many statements
    "PLW0603", # Global statement
    "PLR0913", # Too many arguments
    "B010",    # setattr
    "F401",    # unused imports
    "ARG002",  # unused arguments
    "SIM105",  # try-except-pass
]

[tool.ruff.format]
quote-style = "single"

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.10"
reportPrivateUsage = "none"
reportAttributeAccessIssue = "none"
reportUnknownMemberType = "none"
