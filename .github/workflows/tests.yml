name: Tests

on:
  pull_request:
  push:
    paths-ignore:
    - '**.rst'

jobs:
  x86_64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: ubuntu-24.04
          python-version: '3.10'
        - os: ubuntu-24.04
          python-version: '3.13'
        - os: ubuntu-24.04
          python-version: 'pypy3.10'
        - os: macos-latest
          python-version: '3.10'

    steps:
    - name: Checkout pygit2
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt install tinyproxy
        LIBSSH2_VERSION=1.11.1 LIBGIT2_VERSION=1.9.0 /bin/sh build.sh test

    - name: macOS
      if: runner.os == 'macOS'
      run: |
        export OPENSSL_PREFIX=`brew --prefix openssl@1.1`
        LIBSSH2_VERSION=1.11.1 LIBGIT2_VERSION=1.9.0 /bin/sh build.sh test

  aarch64:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build & test
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: aarch64
        distro: ubuntu22.04
        install: |
          apt-get update -q -y
          apt-get install -q -y cmake libssl-dev python3-dev python3-venv wget
        run: |
          LIBSSH2_VERSION=1.11.1 LIBGIT2_VERSION=1.9.0 /bin/sh build.sh test

  s390x:
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build & test
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: s390x
        distro: ubuntu22.04
        install: |
          apt-get update -q -y
          apt-get install -q -y cmake libssl-dev python3-dev python3-venv wget
        run: |
          LIBSSH2_VERSION=1.11.1 LIBGIT2_VERSION=1.9.0 /bin/sh build.sh test
      continue-on-error: true # Tests are expected to fail, see issue #812
