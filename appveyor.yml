version: 1.16.{build}
image: Visual Studio 2019
configuration: Release
environment:
  global:
    TWINE_USERNAME: __token__
    TWINE_PASSWORD:
      secure: 7YD82RnQJ9rnJE/josiQ/V6VWh+tlhmJpWVM/u5jGdl8XqyhsLEKF5MNMYd4ZYxA/MGaYBCQ525d4m9RSDk9RB+uIFMZJLnl1eOjHQVyJ+ZZmJb65tqd/fR5hybhWtVhn+0wANiI4uqrojFFVy1HjfBYSrvyk+7LLDxfSVTqkhMEhbZbWBpGP/3VET1gPy+qdlWcL7quwhSBPSbKpyMi/cqvp5/yFLAM615RRABgQUDpRyXxtBTReRgWSxi9kUXXqR18ZvQlvMLnAsEnGFRenA==
  matrix:
  - GENERATOR: 'Visual Studio 14'
    PYTHON: 'C:\Python310\python.exe'
  - GENERATOR: 'Visual Studio 14 Win64'
    PYTHON: 'C:\Python310-x64\python.exe'
  - GENERATOR: 'Visual Studio 14'
    PYTHON: 'C:\Python311\python.exe'
  - GENERATOR: 'Visual Studio 14 Win64'
    PYTHON: 'C:\Python311-x64\python.exe'
  - GENERATOR: 'Visual Studio 14'
    PYTHON: 'C:\Python312\python.exe'
  - GENERATOR: 'Visual Studio 14 Win64'
    PYTHON: 'C:\Python312-x64\python.exe'
  - GENERATOR: 'Visual Studio 14'
    PYTHON: 'C:\Python313\python.exe'
  - GENERATOR: 'Visual Studio 14 Win64'
    PYTHON: 'C:\Python313-x64\python.exe'

matrix:
  fast_finish: true

init:
- cmd: |
    "%PYTHON%" -m pip install -U pip wheel

build_script:
# Clone, build and install libgit2
- cmd: |
    set LIBGIT2=%APPVEYOR_BUILD_FOLDER%\venv
    git clone --depth=1 -b v1.9.0 https://github.com/libgit2/libgit2.git libgit2
    cd libgit2
    cmake . -DBUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="%LIBGIT2%" -G "%GENERATOR%"
    cmake --build . --target install
    cd ..

# Build and install pygit2
# Rename pygit2 folder, so when testing it picks the installed one
- cmd: |
    "%PYTHON%" -m pip install -r requirements-test.txt
    "%PYTHON%" -m pip wheel --wheel-dir=dist .
    "%PYTHON%" -m pip install --no-index --find-links=dist pygit2
    mv pygit2 pygit2.bak

test_script:
- ps: |
    &$env:PYTHON -m pytest test --junitxml=testresults.xml

    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

    # upload results to AppVeyor
    $wc = New-Object 'System.Net.WebClient'
    $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path ".\testresults.xml"))

artifacts:
- path: dist\pygit2-*.whl

deploy_script:
- ps: if ($env:APPVEYOR_REPO_TAG -eq $TRUE) { pip install twine; twine upload dist/pygit2-*.whl }

deploy: on
